globals[date_time]

;;-------------------------------------------------------------------------------------------------

;;FECHA

to get_date
   set date_time (word (substring date-and-time 16 27)"___"(substring date-and-time 0 2)"-"(substring date-and-time 3 5)"-"(substring date-and-time 6 8))
   print word "date is " date_time
end
;;-------------------------------------------------------------------------------------------------

to consult
  user-message (word "Verifique haber ejecutado la función graph_generator() antes una nueva simulación")
end

;;-------------------------------------------------------------------------------------------------

;;GENERAR NUEVA OBSERVACIÓN 

to export_data_new
  ;;set fecha (word (substring date-and-time 16 27)"_"(substring date-and-time 0 2)"-"(substring date-and-time 3 5)"-"(substring date-and-time 6 8))
  ;;if ticks = total_ticks [user-message (word "Asegurese de ejecutar GRAPHS.ipynb en uber -> export_data, antes de continuar.")]
	if ticks mod xticks = 0 [create_csv_new]
  
end
;; Generando archivo csv con datos de observación xticks
to create_csv_new
	;;file-delete (word "modules/export_data_from_Nlogo/data/" "data_turtles_" observation "_" ticks  ".csv")
	file-open (word "export_data/"date_time"__" ticks  "_.csv")
	file-type "ID," file-type"x," file-type "y," file-type "Heading," file-print "breed"
	ask people [file-type who file-type "," file-type xcor file-type "," file-type ycor file-type "," file-type heading file-type "," file-print breed ]
	ask drivers [file-type who file-type "," file-type xcor file-type "," file-type ycor file-type "," file-type heading file-type "," file-print breed ]

	;;file-type turtles_list
	file-close
end
;;-------------------------------------------------------------------------------------------------


;;-------------------------------------------------------------------------------------------------
;;PHOTO 
to export-data
	createx_csv
end

to createx_csv
	;;let turtles_list (list ([who] of person 431) ([xcor] of person 431) ([ycor] of person 431))
	;;file-delete "modules/export_data_from_Nlogo/data/data_turtles.csv"
	file-open (word "export_data/" "btn_data_turtles_" ticks   "_.csv")
	file-type "ID," file-type"x," file-type "y," file-type "Heading," file-print "breed"
	ask people [file-type who file-type "," file-type xcor file-type "," file-type ycor file-type "," file-type heading file-type "," file-print breed ]
	ask drivers [file-type who file-type "," file-type xcor file-type "," file-type ycor file-type "," file-type heading file-type "," file-print breed ]

	;;file-type turtles_list
	file-close
end

;;-------------------------------------------------------------------------------------------------


;;INFORMACIÓN GENERAL

to export_grl_data 
  ;;set fecha (word (substring date-and-time 16 27)"_"(substring date-and-time 0 2)"-"(substring date-and-time 3 5)"-"(substring date-and-time 6 8))
  if ticks = total_ticks [create_csv_grl]
end

;; Generando archivo csv con datos GENERALES

to create_csv_grl
  set date_time (word (substring date-and-time 16 27)"___"(substring date-and-time 0 2)"-"(substring date-and-time 3 5)"-"(substring date-and-time 6 8))
	;;let turtles_list (list ([who] of person 431) ([xcor] of person 431) ([ycor] of person 431))
	;;file-delete (word "modules/export_data_from_Nlogo/data/" "GENERAL_" observation "_" ticks  ".csv")
	file-open (word "export_data/"date_time"_GENERAL.csv")
	file-type "#_PEOPLE," file-type"#_UBERS," file-type "#_TAXIS," file-print "xticks" 
	ask turtle 0 [file-type "," file-type number_of_people file-type "," file-type number_of_ubers file-type "," file-type number_of_taxis file-type "," file-print xticks ]

	;;file-type turtles_list
	file-close
end

;;-------------------------------------------------------------------------------------------------



